{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction Copyright &weikang21@stu.pku.edu.cn 2021 all right reserved，powered by Gitbook该文件由KangWei修订，时间为： 2022-03-04 21:59:24 "},"Note-program/Root_Note/install.html":{"url":"Note-program/Root_Note/install.html","title":"Install","keywords":"","body":"Install Copyright &weikang21@stu.pku.edu.cn 2021 all right reserved，powered by Gitbook该文件由KangWei修订，时间为： 2022-03-04 22:00:36 "},"Note-program/Root_Note/Root实例.html":{"url":"Note-program/Root_Note/Root实例.html","title":"Root实例","keywords":"","body":"Root实例 Copyright &weikang21@stu.pku.edu.cn 2021 all right reserved，powered by Gitbook该文件由KangWei修订，时间为： 2022-03-04 22:00:36 "},"Note-program/Root_Note/Root的类.html":{"url":"Note-program/Root_Note/Root的类.html","title":"Root的类","keywords":"","body":"Root的类 Copyright &weikang21@stu.pku.edu.cn 2021 all right reserved，powered by Gitbook该文件由KangWei修订，时间为： 2022-03-04 22:00:36 "},"Note-program/Root_Note/类的简介.html":{"url":"Note-program/Root_Note/类的简介.html","title":"类的简介","keywords":"","body":"类的简介 Copyright &weikang21@stu.pku.edu.cn 2021 all right reserved，powered by Gitbook该文件由KangWei修订，时间为： 2022-03-04 22:00:36 "},"Note-program/Root_Note/Root类的使用/BASE类的简介.html":{"url":"Note-program/Root_Note/Root类的使用/BASE类的简介.html","title":"BASE类","keywords":"","body":"BASE类 Copyright &weikang21@stu.pku.edu.cn 2021 all right reserved，powered by Gitbook该文件由KangWei修订，时间为： 2022-03-04 22:00:36 "},"Note-program/Root_Note/Root类的使用/BASE类/TObject.html":{"url":"Note-program/Root_Note/Root类的使用/BASE类/TObject.html","title":"TObject","keywords":"","body":"TObject Copyright &weikang21@stu.pku.edu.cn 2021 all right reserved，powered by Gitbook该文件由KangWei修订，时间为： 2022-03-04 22:00:36 "},"Note-program/Root_Note/Root类的使用/BASE类/TTree.html":{"url":"Note-program/Root_Note/Root类的使用/BASE类/TTree.html","title":"TTree","keywords":"","body":"TTree Copyright &weikang21@stu.pku.edu.cn 2021 all right reserved，powered by Gitbook该文件由KangWei修订，时间为： 2022-03-04 22:00:36 "},"Note-program/Root_Note/Root类的使用/常用类的简介.html":{"url":"Note-program/Root_Note/Root类的使用/常用类的简介.html","title":"常用类","keywords":"","body":"常用类 Copyright &weikang21@stu.pku.edu.cn 2021 all right reserved，powered by Gitbook该文件由KangWei修订，时间为： 2022-03-04 22:00:36 "},"Note-program/Root_Note/Root类的使用/常用类/TCut.html":{"url":"Note-program/Root_Note/Root类的使用/常用类/TCut.html","title":"TCut","keywords":"","body":"TreeviewKangWei@PKU 2021 all right reserved, powered by aleen42 TCut* class code example TCut* 继承 TNamed A specialized string object used in TTree selections. class TCut(); TCut(const char *title); TCut(const char *name, const char *title); TCut(const TCut &cut); virtual ~TCut(); // Assignment TCut& operator=(const char *rhs); TCut& operator=(const TCut &rhs); TCut& operator+=(const char *rhs); TCut& operator+=(const TCut &rhs); TCut& operator*=(const char *rhs); TCut& operator*=(const TCut &rhs); // Comparison Bool_t operator==(const char *rhs) const; Bool_t operator==(const TCut &rhs) const; Bool_t operator!=(const char *rhs) const; Bool_t operator!=(const TCut &rhs) const; friend TCut operator+(const TCut &lhs, const char *rhs); friend TCut operator+(const char *lhs, const TCut &rhs); friend TCut operator+(const TCut &lhs, const TCut &rhs); friend TCut operator*(const TCut &lhs, const char *rhs); friend TCut operator*(const char *lhs, const TCut &rhs); friend TCut operator*(const TCut &lhs, const TCut &rhs); // Preventing warnings with -Weffc++ in GCC since the overloading of the && and || operators was a design choice. #if (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__) >= 40600 #pragma GCC diagnostic push #pragma GCC diagnostic ignored \"-Weffc++\" #endif friend TCut operator&&(const TCut &lhs, const char *rhs); friend TCut operator&&(const char *lhs, const TCut &rhs); friend TCut operator&&(const TCut &lhs, const TCut &rhs); friend TCut operator||(const TCut &lhs, const char *rhs); friend TCut operator||(const char *lhs, const TCut &rhs); friend TCut operator||(const TCut &lhs, const TCut &rhs); #if (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__) >= 40600 #pragma GCC diagnostic pop #endif friend TCut operator!(const TCut &rhs); // Type conversion operator const char*() const { return GetTitle(); } code // A specialized string object used for TTree selections. // A TCut object has a name and a title. It does not add any data // members compared to a TNamed. It only add a set of operators to // facilitate logical string concatenation. // Operators =, +=, +, *, !, &&, || overloaded. Root > TCut c1 = \"x TCut c2 = \"y TCut c3 = c1&&c2 Root > ntuple.Draw(\"x\", c1) Root > ntuple.Draw(\"x\", c1||\"x>0\") Root > ntuple.Draw(\"x\", c1&&c2) Root > ntuple.Draw(\"x\", \"(x+y)\"*(c1&&c2)) example Copyright &weikang21@stu.pku.edu.cn 2021 all right reserved，powered by Gitbook该文件由KangWei修订，时间为： 2022-03-04 22:02:48 "},"Note-program/Geant4_Note/install.html":{"url":"Note-program/Geant4_Note/install.html","title":"Install","keywords":"","body":"Install Copyright &weikang21@stu.pku.edu.cn 2021 all right reserved，powered by Gitbook该文件由KangWei修订，时间为： 2022-03-04 22:00:36 "}}